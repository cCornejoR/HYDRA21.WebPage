---
// Modern Minimalist Hero Section
// SVG assets for animation cycling
const svgAssets = [
  '/assets/svg/corrugated-culvert-pipe.svg',
  '/assets/svg/culvert.svg',
  '/assets/svg/energy-hydroelectric-dam.svg',
  '/assets/svg/estuary-3d-sea-level-rise-diptych.svg',
  '/assets/svg/mine-drainage.svg',
  '/assets/svg/mining-open-cut-mine.svg',
  '/assets/svg/petroleum-industry-mining-truck.svg',
  '/assets/svg/reef-2d-protected.svg',
  '/assets/svg/river-2d-deep-channel.svg',
  '/assets/svg/river-3d-braided-with-mountains.svg',
  '/assets/svg/river-3d-comparison-natural-vs-developed.svg',
  '/assets/svg/river-3d-mountain-and-lake.svg',
  '/assets/svg/river-3d-urban-paving-with-mid-water-level.svg',
  '/assets/svg/water-drainage-1.svg',
  '/assets/svg/water-water-pipe-1.svg',
  '/assets/svg/weather-rain-2.svg',
  '/assets/svg/weir.svg'
];
---

<!-- Modern Minimalist Hero Section -->
<section class="relative min-h-screen theme-bg transition-all duration-300" id="hero">

  <!-- Background Grid Pattern -->
  <div class="absolute inset-0 diagonal-grid opacity-60 pointer-events-none"></div>

  <!-- Main Content Container -->
  <div class="relative z-10 container mx-auto px-4 sm:px-6 lg:px-8 max-w-7xl">
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-16 items-center min-h-screen py-16 lg:py-24">

      <!-- Content Section -->
      <div class="order-2 lg:order-1 text-center lg:text-left space-y-6 lg:space-y-8">

        <!-- Main Title -->
        <div class="space-y-4">
          <h1 class="text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-light leading-tight tracking-tight">
            <span class="gradient-text-blue-cyan">
              HYDRA<sup class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-normal">²¹</sup>
            </span>
          </h1>
          <p class="text-lg sm:text-xl md:text-2xl lg:text-3xl theme-text-blue font-light leading-relaxed">
            Software de diseño hidráulico profesional
          </p>
        </div>

        <!-- Subtitle -->
        <p class="text-base sm:text-lg md:text-xl theme-text-secondary leading-relaxed max-w-2xl mx-auto lg:mx-0">
          Diseña, simula y analiza sistemas hidráulicos complejos con precisión profesional.
          Herramienta líder para ingenieros civiles e hidráulicos.
        </p>

        <!-- CTA Buttons -->
        <div class="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start pt-6">
          <button class="btn-gradient-blue-primary text-white px-8 py-4 rounded-xl font-semibold text-lg transition-all duration-300 hover:btn-gradient-blue-primary-hover hover:scale-105 shadow-lg">
            Descargar HYDRA²¹
          </button>
          <button class="glass-effect theme-text px-8 py-4 rounded-xl font-medium text-lg transition-all duration-300 hover:scale-105">
            Ver Documentación
          </button>
        </div>

        <!-- Statistics -->
        <div class="grid grid-cols-3 gap-6 pt-8 max-w-md mx-auto lg:mx-0">
          <div class="text-center">
            <div class="text-2xl sm:text-3xl font-bold theme-text-blue">500+</div>
            <div class="text-sm theme-text-secondary uppercase tracking-wide">Proyectos</div>
          </div>
          <div class="text-center">
            <div class="text-2xl sm:text-3xl font-bold theme-text-blue">50+</div>
            <div class="text-sm theme-text-secondary uppercase tracking-wide">Países</div>
          </div>
          <div class="text-center">
            <div class="text-2xl sm:text-3xl font-bold theme-text-blue">15+</div>
            <div class="text-sm theme-text-secondary uppercase tracking-wide">Años</div>
          </div>
        </div>
      </div>

      <!-- SVG Animation Section -->
      <div class="order-1 lg:order-2 flex justify-center items-center">
        <div class="relative w-full max-w-lg">
          <!-- SVG Container with Animation -->
          <div id="svg-showcase" class="relative w-full h-96 flex items-center justify-center">
            <!-- SVG elements will be dynamically loaded here -->
          </div>

          <!-- Animation Controls (Optional) -->
          <div class="flex justify-center mt-6 space-x-2">
            <div class="w-2 h-2 rounded-full bg-blue-500 opacity-50 transition-opacity duration-300" data-slide="0"></div>
            <div class="w-2 h-2 rounded-full bg-blue-500 opacity-50 transition-opacity duration-300" data-slide="1"></div>
            <div class="w-2 h-2 rounded-full bg-blue-500 opacity-50 transition-opacity duration-300" data-slide="2"></div>
          </div>
        </div>
      </div>

    </div>
  </div>
</section>

<script>
  // SVG Animation System
  document.addEventListener('DOMContentLoaded', () => {
    const svgAssets = [
      '/assets/svg/corrugated-culvert-pipe.svg',
      '/assets/svg/culvert.svg',
      '/assets/svg/energy-hydroelectric-dam.svg',
      '/assets/svg/estuary-3d-sea-level-rise-diptych.svg',
      '/assets/svg/mine-drainage.svg',
      '/assets/svg/mining-open-cut-mine.svg',
      '/assets/svg/petroleum-industry-mining-truck.svg',
      '/assets/svg/reef-2d-protected.svg',
      '/assets/svg/river-2d-deep-channel.svg',
      '/assets/svg/river-3d-braided-with-mountains.svg',
      '/assets/svg/river-3d-comparison-natural-vs-developed.svg',
      '/assets/svg/river-3d-mountain-and-lake.svg',
      '/assets/svg/river-3d-urban-paving-with-mid-water-level.svg',
      '/assets/svg/water-drainage-1.svg',
      '/assets/svg/water-water-pipe-1.svg',
      '/assets/svg/weather-rain-2.svg',
      '/assets/svg/weir.svg'
    ];

    const showcase = document.getElementById('svg-showcase');
    const indicators = document.querySelectorAll('[data-slide]');
    let currentIndex = 0;
    let animationInterval;

    
    // Preload SVG content
    const svgCache = new Map();

    async function preloadSVGs() {
      for (const asset of svgAssets) {
        try {
          const response = await fetch(asset);
          const svgContent = await response.text();
          svgCache.set(asset, svgContent);
        } catch (error) {
          console.warn(`Failed to preload SVG: ${asset}`, error);
        }
      }
    }

    function createSVGElement(svgContent, index) {
      const container = document.createElement('div');
      container.className = `absolute inset-0 flex items-center justify-center transition-all duration-1000 ${
        index === currentIndex ? 'opacity-100 scale-100' : 'opacity-0 scale-95'
      }`;
      container.innerHTML = svgContent;

      // Style the SVG
      const svg = container.querySelector('svg');
      if (svg) {
        svg.className = 'w-full h-full max-w-md max-h-80 object-contain filter drop-shadow-lg';
        svg.style.filter = 'drop-shadow(0 10px 25px rgba(59, 130, 246, 0.15))';
      }

      return container;
    }

    function updateIndicators() {
      indicators.forEach((indicator, index) => {
        indicator.style.opacity = index === currentIndex ? '1' : '0.5';
        indicator.style.backgroundColor = index === currentIndex ? '#3b82f6' : '#64748b';
      });
    }

    function showNextSVG() {
      if (svgCache.size === 0) return;

      const currentElements = showcase.querySelectorAll('.absolute');
      currentElements.forEach(el => {
        el.style.opacity = '0';
        el.style.transform = 'scale(0.95)';
      });

      setTimeout(() => {
        currentIndex = (currentIndex + 1) % svgAssets.length;

        // Clear showcase
        showcase.innerHTML = '';

        // Add new SVG
        const svgContent = svgCache.get(svgAssets[currentIndex]);
        if (svgContent) {
          const svgElement = createSVGElement(svgContent, currentIndex);
          showcase.appendChild(svgElement);

          // Trigger animation
          requestAnimationFrame(() => {
            svgElement.style.opacity = '1';
            svgElement.style.transform = 'scale(1)';
          });
        }

        updateIndicators();
      }, 500);
    }

    function startAnimation() {
      // Show first SVG
      if (svgCache.size > 0) {
        const svgContent = svgCache.get(svgAssets[0]);
        if (svgContent) {
          const svgElement = createSVGElement(svgContent, 0);
          showcase.appendChild(svgElement);
          updateIndicators();
        }
      }

      // Start cycling
      animationInterval = setInterval(showNextSVG, 4000);
    }

    function stopAnimation() {
      if (animationInterval) {
        clearInterval(animationInterval);
      }
    }

    // Pause animation on hover (desktop only)
    if (window.matchMedia('(hover: hover)').matches) {
      showcase.addEventListener('mouseenter', stopAnimation);
      showcase.addEventListener('mouseleave', () => {
        stopAnimation();
        startAnimation();
      });
    }

    // Respect reduced motion preference
    if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
      // Show only the first SVG without animation
      preloadSVGs().then(() => {
        if (svgCache.size > 0) {
          const svgContent = svgCache.get(svgAssets[0]);
          if (svgContent) {
            const svgElement = createSVGElement(svgContent, 0);
            showcase.appendChild(svgElement);
            updateIndicators();
          }
        }
      });
    } else {
      // Start normal animation
      preloadSVGs().then(startAnimation);
    }

    // Manual indicator controls
    indicators.forEach((indicator, index) => {
      indicator.addEventListener('click', () => {
        stopAnimation();
        currentIndex = index;

        const svgContent = svgCache.get(svgAssets[currentIndex]);
        if (svgContent) {
          showcase.innerHTML = '';
          const svgElement = createSVGElement(svgContent, currentIndex);
          showcase.appendChild(svgElement);
          updateIndicators();
        }

        // Restart animation after a delay
        setTimeout(() => {
          startAnimation();
        }, 2000);
      });
    });
  });
</script>


<style>
  /* SVG Animation Styles */
  #svg-showcase {
    position: relative;
    overflow: hidden;
  }

  #svg-showcase svg {
    transition: all 1s cubic-bezier(0.4, 0, 0.2, 1);
    filter: drop-shadow(0 10px 25px rgba(59, 130, 246, 0.15));
  }

  .dark #svg-showcase svg {
    filter: drop-shadow(0 10px 25px rgba(59, 130, 246, 0.2));
  }

  /* Animation indicators */
  [data-slide] {
    cursor: pointer;
    transition: all 0.3s ease;
  }

  [data-slide]:hover {
    transform: scale(1.2);
  }

  /* Responsive optimizations */
  @media (max-width: 768px) {
    #svg-showcase {
      height: 20rem;
    }
  }

  @media (min-width: 769px) {
    #svg-showcase {
      height: 24rem;
    }
  }

  /* Accessibility */
  @media (prefers-reduced-motion: reduce) {
    #svg-showcase svg,
    [data-slide] {
      transition: none;
    }
  }
</style>

