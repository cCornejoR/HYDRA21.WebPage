---
// Header.astro
---

<header id="site-header" class="fixed top-0 left-0 right-0 z-50 transition-all duration-500 ease-out bg-transparent lg:py-4 lg:px-4 lg:mx-4 lg:mt-4 lg:rounded-xl shadow-none border border-transparent backdrop-blur-none" transition:name="main-header">
  <nav class="w-full px-4 lg:container lg:mx-auto lg:px-8">
    <div class="flex justify-between items-center h-16 lg:h-14">
      <!-- Logo -->
      <div class="flex items-center space-x-2 lg:space-x-3" transition:name="logo-section">
        <img src="/pipe_logo.svg" alt="HYDRA²¹ Logo" class="h-7 lg:h-9 w-auto" transition:name="logo-image" />
        <span class="font-bold text-white text-lg lg:text-xl tracking-tight">
          <span class="gradient-text-blue-cyan" transition:name="logo-text">HYDRA²¹</span>
        </span>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden lg:flex items-center space-x-6" transition:name="desktop-nav">
        <nav class="flex items-center space-x-6">
          <a href="/" class="text-gray-300 hover:text-white transition font-medium">Inicio</a>
          <a href="/about" class="text-gray-300 hover:text-white transition font-medium">Acerca de</a>
          <a href="/#caracteristicas" class="text-gray-300 hover:text-white transition font-medium">Caracteristicas</a>
          <a href="/#documentacion" class="text-gray-300 hover:text-white transition font-medium">Documentacion</a>
          <a href="/#contacto" class="text-gray-300 hover:text-white transition font-medium">Contacto</a>
        </nav>
      </div>

      <!-- Right Side -->
      <div class="flex items-center space-x-2 lg:space-x-3" transition:name="header-actions">
        <button class="hidden lg:flex items-center justify-center w-9 h-9 rounded-full bg-gray-800 hover:bg-gray-700 transition">
          <svg class="w-5 h-5 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
          </svg>
        </button>
        <a href="/descargas" class="hidden min-[500px]:flex items-center space-x-2 bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700 text-white px-3 py-1.5 rounded-md font-medium text-sm transition transform hover:scale-105 hover:shadow-lg hover:shadow-blue-500/25">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
          </svg>
          <span>Descargar</span>
        </a>
        <!-- Mobile Hamburger -->
        <label id="mobile-menu-button" class="lg:hidden flex flex-col gap-2 w-8 cursor-pointer" aria-label="Abrir menú" transition:name="mobile-menu-button">
          <input id="mobile-menu-checkbox" class="peer hidden" type="checkbox" />
          <div class="h-[3px] w-1/2 bg-white rounded duration-500 peer-checked:rotate-[225deg] origin-right peer-checked:-translate-x-[12px] peer-checked:-translate-y-[1px]"></div>
          <div class="h-[3px] w-full bg-white rounded duration-500 peer-checked:-rotate-45"></div>
          <div class="h-[3px] w-1/2 bg-white rounded duration-500 place-self-end peer-checked:rotate-[225deg] origin-left peer-checked:translate-x-[12px] peer-checked:translate-y-[1px]"></div>
        </label>
      </div>
    </div>

    <!-- Mobile Navigation Menu -->
    <div id="mobile-menu" class="lg:hidden hidden bg-black/95 border-t border-gray-800 lg:rounded-b-xl">
      <div class="px-4 pt-4 pb-6 space-y-4">
        <a href="/" class="block text-gray-300 hover:text-white transition-colors duration-200 font-medium py-2">
          Inicio
        </a>
        <a href="/about" class="block text-gray-300 hover:text-white transition-colors duration-200 font-medium py-2">
          Acerca de
        </a>
        <a href="#caracteristicas" class="block text-gray-300 hover:text-white transition-colors duration-200 font-medium py-2">
          Caracteristicas
        </a>
        <a href="#documentacion" class="block text-gray-300 hover:text-white transition-colors duration-200 font-medium py-2">
          Documentacion
        </a>
        <a href="#contacto" class="block text-gray-300 hover:text-white transition-colors duration-200 font-medium py-2">
          Contacto
        </a>

        <!-- Mobile Download Section -->
        <div class="pt-4 border-t border-gray-800">
          <a href="/descargas" class="flex items-center space-x-3 text-white bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700 transition-all duration-300 py-3 px-4 rounded-lg hover:scale-105">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
            <span>Descargar HYDRA²¹</span>
          </a>
        </div>
      </div>
    </div>
  </nav>
</header>

<script>
  function initializeHeader() {
    const header = document.getElementById('site-header');
    let lastScrollY = window.scrollY;
    let ticking = false;
    let isHeaderHidden = false;

    if (header) {
      const updateHeader = () => {
        const currentScrollY = window.scrollY;
        const isDesktop = window.innerWidth >= 1024;

        // Enhanced sticky behavior with smooth transitions
        if (currentScrollY > 20) {
          if (isDesktop) {
            // Desktop: floating card effect with subtle movement
            header.classList.remove('bg-transparent', 'lg:py-4', 'shadow-none', 'border-transparent', 'backdrop-blur-none');
            header.classList.add('bg-black/90', 'lg:py-2', 'shadow-2xl', 'border-gray-700', 'backdrop-blur-xl');
            
            // Subtle parallax effect for desktop
            const parallaxOffset = Math.min(currentScrollY * 0.1, 8);
            header.style.transform = `translateY(${parallaxOffset}px)`;
          } else {
            // Mobile: clean sticky header
            header.classList.remove('bg-transparent', 'shadow-none', 'border-transparent', 'backdrop-blur-none');
            header.classList.add('bg-black/95', 'shadow-xl', 'border-gray-700', 'backdrop-blur-xl');
          }
        } else {
          // Reset to transparent state
          if (isDesktop) {
            header.classList.remove('bg-black/90', 'lg:py-2', 'shadow-2xl', 'border-gray-700', 'backdrop-blur-xl');
            header.classList.add('bg-transparent', 'lg:py-4', 'shadow-none', 'border-transparent', 'backdrop-blur-none');
            header.style.transform = 'translateY(0)';
          } else {
            header.classList.remove('bg-black/95', 'shadow-xl', 'border-gray-700', 'backdrop-blur-xl');
            header.classList.add('bg-transparent', 'shadow-none', 'border-transparent', 'backdrop-blur-none');
          }
        }

        // Sticky behavior without auto-hide (user preference)
        // Always keep header visible with proper styling
        header.style.opacity = '1';
        isHeaderHidden = false;

        // Apply appropriate transform based on device
        if (isDesktop && currentScrollY > 20) {
          // Subtle parallax effect for desktop only
          const parallaxOffset = Math.min(currentScrollY * 0.1, 8);
          header.style.transform = `translateY(${parallaxOffset}px)`;
        } else {
          // Keep mobile header fixed without transform
          header.style.transform = 'translateY(0)';
        }

        lastScrollY = currentScrollY;
        ticking = false;
      };

      const requestTick = () => {
        if (!ticking) {
          requestAnimationFrame(updateHeader);
          ticking = true;
        }
      };

      // Throttled scroll listener for better performance
      let scrollTimeout: ReturnType<typeof setTimeout>;
      window.addEventListener('scroll', () => {
        requestTick();
        
        // Clear existing timeout
        clearTimeout(scrollTimeout);
        
        // Set new timeout to handle scroll end
        scrollTimeout = setTimeout(() => {
          if (window.scrollY === 0) {
            updateHeader();
          }
        }, 150);
      }, { passive: true });
      
      // Handle window resize
      window.addEventListener('resize', () => {
        requestTick();
      });

      // Initialize header state
      updateHeader();
    }

    // Funcionalidad del menú móvil
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileMenuCheckbox = document.getElementById('mobile-menu-checkbox') as HTMLInputElement;

    function closeMenu() {
      if (!mobileMenu || !mobileMenuCheckbox) return;
      
      setTimeout(() => {
        mobileMenu.classList.add('hidden');
        mobileMenuCheckbox.checked = false;
        document.body.style.overflow = '';
      }, 300);
    }

    if (mobileMenuButton && mobileMenu && mobileMenuCheckbox) {
      
      function openMenu() {
        if (!mobileMenu) return;
        
        mobileMenu.classList.remove('hidden');
        mobileMenuCheckbox.checked = true;
        
        // Animate menu items with stagger effect
        const menuItems = mobileMenu.querySelectorAll('a, button');
        menuItems.forEach((item, index) => {
          (item as HTMLElement).style.transitionDelay = `${index * 50}ms`;
        });
      }

      mobileMenuCheckbox.addEventListener('change', function() {
        if (this.checked) {
          openMenu();
        } else {
          closeMenu();
        }
      });

      // Close menu when clicking on links
      const menuLinks = mobileMenu.querySelectorAll('a');
      menuLinks.forEach(link => {
        link.addEventListener('click', closeMenu);
      });

      // Close menu when clicking outside
      document.addEventListener('click', function(event) {
        const target = event.target as HTMLElement;
        if (!mobileMenuButton.contains(target) && !mobileMenu.contains(target) && mobileMenuCheckbox.checked) {
          closeMenu();
        }
      });

      // Handle escape key
      document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape' && mobileMenuCheckbox.checked) {
          closeMenu();
        }
      });
    }
  }

  // Initialize on DOM content loaded AND after each page transition
  document.addEventListener('DOMContentLoaded', initializeHeader);
  document.addEventListener("astro:page-load", initializeHeader);
</script>

<style>
  /* Enhanced header transitions with improved performance */
  header {
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    will-change: transform, background-color, backdrop-filter;
  }

  /* Mobile specific optimizations */
  @media (max-width: 1023px) {
    header {
      margin: 0 !important;
      border-radius: 0 !important;
      padding: 0 !important;
      transform: translateY(0) !important; /* Override desktop parallax on mobile */
    }
  }

  /* Desktop enhancements */
  @media (min-width: 1024px) {
    header {
      transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }
    
    header:hover {
      transform: translateY(-2px) !important;
      box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.5) !important;
    }
  }

  .gradient-text-blue-cyan {
    background: linear-gradient(135deg, #60a5fa 0%, #06b6d4 50%, #3b82f6 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    background-size: 200% 100%;
    filter: drop-shadow(0 0 8px rgba(59, 130, 246, 0.3));
    animation: gradientShift 4s ease-in-out infinite;
  }

  @keyframes gradientShift {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }

  /* Enhanced mobile menu animations */
  #mobile-menu {
    animation: slideDown 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    backdrop-filter: blur(20px);
  }

  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Enhanced interactive elements */
  nav a {
    position: relative;
    transition: all 0.3s ease;
  }

  nav a::after {
    content: '';
    position: absolute;
    bottom: -4px;
    left: 0;
    width: 0;
    height: 2px;
    background: linear-gradient(90deg, #3b82f6, #06b6d4);
    transition: width 0.3s ease;
  }

  nav a:hover::after {
    width: 100%;
  }

  /* Button hover effects */
  button {
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  button:hover {
    transform: translateY(-1px);
    box-shadow: 0 10px 25px rgba(59, 130, 246, 0.3);
  }

  /* Improved mobile menu interactions */
  #mobile-menu a:hover {
    text-shadow: 0 0 12px rgba(34, 211, 238, 0.8);
    transform: translateX(8px);
  }

  /* Performance optimizations */
  @media (prefers-reduced-motion: reduce) {
    *, *::before, *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
</style>
